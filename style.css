// Initialize GSAP and Locomotive Scroll
function init() {
    gsap.registerPlugin(ScrollTrigger);

    const locoScroll = new LocomotiveScroll({
        el: document.querySelector(".main"),
        smooth: true
    });

    locoScroll.on("scroll", ScrollTrigger.update);

    ScrollTrigger.scrollerProxy(".main", {
        scrollTop(value) {
            return arguments.length ? locoScroll.scrollTo(value, 0, 0) : locoScroll.scroll.instance.scroll.y;
        },
        getBoundingClientRect() {
            return {
                top: 0,
                left: 0,
                width: window.innerWidth,
                height: window.innerHeight
            };
        },
        pinType: document.querySelector(".main").style.transform ? "transform" : "fixed"
    });

    ScrollTrigger.addEventListener("refresh", () => locoScroll.update());
    ScrollTrigger.refresh();
}

// Initialize cursor movement and animations
function initCursor() {
    const crsr = document.querySelector(".cursor");

    document.addEventListener("mousemove", (e) => {
        crsr.style.left = `${e.clientX + 20}px`;
        crsr.style.top = `${e.clientY + 20}px`;
    });
}

// GSAP Animations
function initAnimations() {
    gsap.from(".page1 h1, .page1 h2", {
        y: 10,
        rotate: 10,
        opacity: 0,
        delay: 0.3,
        duration: 0.7
    });

    let tl = gsap.timeline({
        scrollTrigger: {
            trigger: ".page1 h1",
            scroller: ".main",
            start: "top 27%",
            end: "top 0",
            scrub: 3
        }
    });

    tl.to(".page1 h1", { x: -100 }, "anim")
      .to(".page1 h2", { x: 100 }, "anim")
      .to(".page1 video", { width: "90%" }, "anim");

    gsap.timeline({
        scrollTrigger: {
            trigger: ".page1 h1",
            scroller: ".main",
            start: "top -115%",
            end: "top -120%",
            scrub: 3
        }
    }).to(".main", { backgroundColor: "#fff" });

    gsap.timeline({
        scrollTrigger: {
            trigger: ".page1 h1",
            scroller: ".main",
            start: "top -280%",
            end: "top -300%",
            scrub: 3
        }
    }).to(".main", { backgroundColor: "#0F0D0D" });
}

// Handle box hover effects
function initBoxHover() {
    const crsr = document.querySelector(".cursor");
    const boxes = document.querySelectorAll(".box");

    boxes.forEach((box) => {
        box.addEventListener("mouseenter", () => {
            const att = box.getAttribute("data-image");
            crsr.style.width = "470px";
            crsr.style.height = "370px";
            crsr.style.borderRadius = "0";
            crsr.style.backgroundImage = `url(${att})`;
        });

        box.addEventListener("mouseleave", () => {
            crsr.style.width = "20px";
            crsr.style.height = "20px";
            crsr.style.borderRadius = "50%";
            crsr.style.backgroundImage = "none";
        });
    });
}

// Handle navigation hover effects
function initNavHover() {
    const purple = document.querySelector("#purple");
    const h4Elements = document.querySelectorAll("#nav h4");

    h4Elements.forEach((elem) => {
        elem.addEventListener("mouseenter", () => {
            purple.classList.add("visible");
        });

        elem.addEventListener("mouseleave", () => {
            purple.classList.remove("visible");
        });
    });
}

// Initialize all functionalities
function initAll() {
    init();
    initCursor();
    initAnimations();
    initBoxHover();
    initNavHover();
}

initAll();

